[
  {
    "objectID": "projects-folder/COPD_gene_project.html",
    "href": "projects-folder/COPD_gene_project.html",
    "title": "COPD Gene Study - Final Class Project",
    "section": "",
    "text": "This project was written by Dr.Â Kyle Hasenstab as the final project for an introductory data science class taught in R at SDSU. It was completed by Jayna Snyder. Formatting has been edited for display on portfolio."
  },
  {
    "objectID": "projects-folder/COPD_gene_project.html#introduction",
    "href": "projects-folder/COPD_gene_project.html#introduction",
    "title": "COPD Gene Study - Final Class Project",
    "section": "Introduction",
    "text": "Introduction\nChronic obstructive pulmonary disease (COPD) affects over 16 million Americans and is the fourth leading cause of death in the United States behind heart disease, cancer, and accidental death. While COPD can result from various toxic inhalations or asthma, it is most commonly associated with cigarette smoking.\nCOPD severity is typically measured by a device called a spirometer. Patients forcefully exhale into the device and the volume of air exhaled is used as a measure for the severity of disease (less air exhaled \\(\\Rightarrow\\) worse disease). Data collected by the COPDGene research group includes spirometry data on thousands of research participants.\nSpirometry measures in the dataset:\n\nThe forced expiratory volume (FEV1) is the volume of air exhaled in 1 second * The forced vital capacity (FVC) is the total volume of air exhaled after a full breath\nFEV1_FVC_ratio is the ratio between FEV1 and FVC (smaller \\(\\Rightarrow\\) worse disease)\nFEV1_phase2 is the FEV1 of research participants 5 years later\n\nThe overall task in this project is to analyze the relationship between FEV1 at follow-up (FEV1_phase2) and other variables in the dataset. The project has been organized into a series of tasks to assist with analysis organization."
  },
  {
    "objectID": "projects-folder/COPD_gene_project.html#data-wrangling",
    "href": "projects-folder/COPD_gene_project.html#data-wrangling",
    "title": "COPD Gene Study - Final Class Project",
    "section": "Data Wrangling",
    "text": "Data Wrangling\n\n\nCode\n#necessary packages & libraries\nlibrary(jsonlite)\nlibrary(rvest)\nlibrary(ggplot2)\n\n\nImport Data\n\n\nCode\n#import COPD demographics data from CSV file\nCOPD_demographics &lt;- read.csv(\"https://raw.githubusercontent.com/khasenst/datasets_teaching/refs/heads/main/copd_data_demographics.csv\")\n  str(COPD_demographics)\n\n\n'data.frame':   2620 obs. of  18 variables:\n $ sid                     : chr  \"10005Q\" \"10055F\" \"10056H\" \"10060Y\" ...\n $ visit_year              : int  2008 2008 2008 2008 2008 2008 2008 2008 2008 2008 ...\n $ visit_date              : chr  \"1/15/2008\" \"3/15/2008\" \"2/15/2008\" \"5/15/2008\" ...\n $ visit_age               : num  54.5 69 48.7 72.8 76.2 70 61.8 69.6 47.8 71.5 ...\n $ gender                  : int  2 1 2 1 2 2 1 2 1 1 ...\n $ race                    : int  1 2 1 1 1 1 1 1 1 1 ...\n $ smoking_status          : int  2 1 1 1 1 1 1 1 2 1 ...\n $ height_cm               : num  160 178 154 177 155 ...\n $ weight_kg               : num  73 90.7 86.2 89.6 55 ...\n $ blood_pressure_systolic : int  130 168 100 147 134 92 108 144 139 140 ...\n $ blood_pressure_diastolic: int  80 100 53 71 78 58 78 90 90 75 ...\n $ heart_rate              : int  87 55 98 87 92 77 72 110 87 73 ...\n $ hours_on_oxygen         : int  0 0 24 24 0 12 0 0 0 24 ...\n $ bmi                     : num  28.6 28.6 36.5 28.6 22.9 ...\n $ smoke_start_age         : int  14 18 12 17 18 16 13 16 19 13 ...\n $ cigs_per_day_avg        : int  20 20 40 30 20 40 20 20 20 20 ...\n $ duration_smoking        : num  40.5 20 36 54 52 48 17 30 28.8 57 ...\n $ respiratory             : chr  \"\" \"hay fever\" \"asthma|bronchitis attacks|chronic bronchitis|pneumonia|emphysema|copd|sleep apnea\" \"asthma|bronchitis attacks|chronic bronchitis|emphysema|copd\" ...\n\n\nCode\n#import COPD medical images data from JSON file\nCOPD_medical_images &lt;- fromJSON(\"https://raw.githubusercontent.com/khasenst/datasets_teaching/refs/heads/main/copd_data_imaging.json\")\n  str(COPD_medical_images)\n\n\n'data.frame':   2610 obs. of  7 variables:\n $ sid                     : chr  \"24838L\" \"14901M\" \"11357A\" \"20152J\" ...\n $ lung_volume_inspiratory : num  4.2 5.78 5.5 4.94 4.65 ...\n $ emphysema_percentage    : num  1.37 3.78 4.72 8.42 0.06 ...\n $ lung_volume_expiratory  : num  2.3 2.99 2.75 3.21 2.98 ...\n $ gas_trapping_percentage : num  10.56 11.66 16.92 39.41 2.62 ...\n $ mean_density_inspiratory: num  -830 -836 -856 -851 -762 ...\n $ mean_density_expiratory : num  -685 -674 -728 -777 -656 ...\n\n\nCode\n#import COPD spirometry data from HTML file\nhtml &lt;- read_html(\"https://raw.githubusercontent.com/khasenst/datasets_teaching/refs/heads/main/copd_data_spirometry.html\")\nCOPD_spirometry &lt;- as.data.frame(html_table(html)[[1]])\n  str(COPD_spirometry)\n\n\n'data.frame':   2610 obs. of  5 variables:\n $ sid           : chr  \"22035P\" \"25109H\" \"10127E\" \"15450K\" ...\n $ fev1_fvc_ratio: num  0.62 0.81 0.83 0.51 0.75 0.81 0.31 0.76 0.81 0.82 ...\n $ fev1          : num  3.67 1.97 2.32 2.4 3.94 ...\n $ fvc           : num  5.95 2.43 2.79 4.75 5.27 ...\n $ fev1_phase2   : num  3.48 2.05 2.13 1.42 3.57 ...\n\n\nCode\n#import data dictionary\nCOPD_data_dictionary &lt;- read.csv(\"https://raw.githubusercontent.com/khasenst/datasets_teaching/refs/heads/main/copd_data_dictionary.csv\")\n\n\nMerge Data Sets\n\n\nCode\n# merge demographics and medical images dataset\nCOPD_data &lt;- merge( x = COPD_demographics,\n                    y = COPD_medical_images,\n                    by.x = \"sid\",\n                    by.y = \"sid\",\n                    all.x = TRUE,\n                    all.y = TRUE)\n\n# merge demographics, medical images, and spirometry datasets\nCOPD_data &lt;- merge( x = COPD_data,\n                    y = COPD_spirometry,\n                    by.x = \"sid\",\n                    by.y = \"sid\",\n                    all.x = TRUE,\n                    all.y = TRUE)\n\n# check dimensions of new data set\ndim(COPD_data)\n\n\n[1] 2620   28\n\n\nVariable Manipulation\n\n\nCode\n# Convert numeric indicator variables into factor type with descriptive labels from data dictionary\nCOPD_data$gender &lt;- factor(COPD_data$gender, levels = c(1,2), labels = c(\"Male\", \"Female\"))\n\nCOPD_data$race &lt;- factor(COPD_data$race, levels = c(1,2), labels = c(\"White\", \"Black\"))\n\nCOPD_data$smoking_status &lt;- factor(COPD_data$smoking_status, levels = c(0,1,2), labels = c(\"Never Smoked\", \"Former Smoker\", \"Current Smoker\"))\n\n# Create new height variable in inches\nCOPD_data$height_in &lt;- COPD_data$height_cm / 2.54\n\n# Create new weight variable in pounds\nCOPD_data$weight_lbs &lt;- COPD_data$weight_kg * 2.2\n\n# Convert to date\nCOPD_data$visit_date &lt;- as.Date(COPD_data$visit_date, format = \"%m/%d/%Y\")\n\n# Convert age to integer\nCOPD_data$visit_age &lt;- as.integer(COPD_data$visit_age)\n\n# Convert visit year to factor\nCOPD_data$visit_year &lt;- as.factor(COPD_data$visit_year)\n\n# Convert hours_on_oxygen to factor because there are only discrete options (1, 2, ..., 24 hours)\nCOPD_data$hours_on_oxygen &lt;- as.factor(COPD_data$hours_on_oxygen)\n\n# Check work\nhead(COPD_data)\n\n\n     sid visit_year visit_date visit_age gender  race smoking_status height_cm\n1 10005Q       2008 2008-01-15        54 Female White Current Smoker     159.9\n2 10055F       2008 2008-03-15        69   Male Black  Former Smoker     178.0\n3 10056H       2008 2008-02-15        48 Female White  Former Smoker     153.7\n4 10060Y       2008 2008-05-15        72   Male White  Former Smoker     177.0\n5 10068O       2008 2008-03-15        76 Female White  Former Smoker     155.0\n6 10072F       2008 2008-03-15        70 Female White  Former Smoker     165.1\n  weight_kg blood_pressure_systolic blood_pressure_diastolic heart_rate\n1      73.0                     130                       80         87\n2      90.7                     168                      100         55\n3      86.2                     100                       53         98\n4      89.6                     147                       71         87\n5      55.0                     134                       78         92\n6      76.1                      92                       58         77\n  hours_on_oxygen   bmi smoke_start_age cigs_per_day_avg duration_smoking\n1               0 28.55              14               20             40.5\n2               0 28.63              18               20             20.0\n3              24 36.49              12               40             36.0\n4              24 28.60              17               30             54.0\n5               0 22.89              18               20             52.0\n6              12 27.92              16               40             48.0\n                                                                        respiratory\n1                                                                                  \n2                                                                         hay fever\n3 asthma|bronchitis attacks|chronic bronchitis|pneumonia|emphysema|copd|sleep apnea\n4                       asthma|bronchitis attacks|chronic bronchitis|emphysema|copd\n5          hay fever|bronchitis attacks|chronic bronchitis|pneumonia|emphysema|copd\n6                                                          pneumonia|emphysema|copd\n  lung_volume_inspiratory emphysema_percentage lung_volume_expiratory\n1                  5.6636               0.9269                 2.4766\n2                  4.9060               1.9452                 1.9057\n3                  4.8654              11.3832                 4.0606\n4                  7.3304              19.2623                 5.3342\n5                  6.0099              41.7757                 4.1552\n6                  3.9788               2.4735                 2.8876\n  gas_trapping_percentage mean_density_inspiratory mean_density_expiratory\n1                  6.8008                 -830.343                -650.526\n2                 10.6835                 -823.746                -638.442\n3                 47.8811                 -836.281                -797.471\n4                 53.4747                 -867.254                -821.256\n5                 66.1621                 -903.436                -856.337\n6                 31.0631                 -816.235                -747.113\n  fev1_fvc_ratio  fev1   fvc fev1_phase2 height_in weight_lbs\n1           0.77 2.921 3.805       2.622  62.95276     160.60\n2           0.73 2.917 3.999       2.439  70.07874     199.54\n3           0.29 0.374 1.281       0.379  60.51181     189.64\n4           0.29 0.706 2.424       1.405  69.68504     197.12\n5           0.46 0.806 1.736       0.580  61.02362     121.00\n6           0.57 1.573 2.752       1.477  65.00000     167.42\n\n\nText Processing for Variable Creation\n\n\nCode\n# Use text processing to convert respiratory variable into separate variables by diagnosis\nCOPD_data$hay_fever          &lt;- ifelse(grepl(pattern = \"hay fever\", x = COPD_data$respiratory) , \"Yes\", \"No\")\nCOPD_data$asthma             &lt;- ifelse(grepl(pattern = \"asthma\", x = COPD_data$respiratory) , \"Yes\", \"No\")\nCOPD_data$bronchitis_attacks &lt;- ifelse(grepl(pattern = \"bronchitis attacks\", x = COPD_data$respiratory) , \"Yes\", \"No\")\nCOPD_data$chronic_bronchitis &lt;- ifelse(grepl(pattern = \"chronic bronchitis\", x = COPD_data$respiratory) , \"Yes\", \"No\")\nCOPD_data$pneumonia          &lt;- ifelse(grepl(pattern = \"pneumonia\", x = COPD_data$respiratory) , \"Yes\", \"No\")\nCOPD_data$emphysema          &lt;- ifelse(grepl(pattern = \"emphysema\", x = COPD_data$respiratory) , \"Yes\", \"No\")\nCOPD_data$copd               &lt;- ifelse(grepl(pattern = \"copd\", x = COPD_data$respiratory) , \"Yes\", \"No\")\nCOPD_data$sleep_apnea        &lt;- ifelse(grepl(pattern = \"sleep apnea\", x = COPD_data$respiratory) , \"Yes\", \"No\")\n\nhead(COPD_data[, c(\"hay_fever\", \"asthma\", \"bronchitis_attacks\", \"chronic_bronchitis\", \"pneumonia\", \"emphysema\", \"copd\", \"sleep_apnea\")])\n\n\n  hay_fever asthma bronchitis_attacks chronic_bronchitis pneumonia emphysema\n1        No     No                 No                 No        No        No\n2       Yes     No                 No                 No        No        No\n3        No    Yes                Yes                Yes       Yes       Yes\n4        No    Yes                Yes                Yes        No       Yes\n5       Yes     No                Yes                Yes       Yes       Yes\n6        No     No                 No                 No       Yes       Yes\n  copd sleep_apnea\n1   No          No\n2   No          No\n3  Yes         Yes\n4  Yes          No\n5  Yes          No\n6  Yes          No\n\n\nRemoving Unnecessary Variables\n\n\nCode\n# create new data set without height_cm, weight_kg, and respiratory columns\nCOPD_data_clean &lt;- COPD_data[ , !names(COPD_data) %in% c(\"height_cm\", \"weight_kg\", \"respiratory\")]\n\n\nExport new dataset\n\n\nCode\n#Export data as csv file\nwrite.csv(x = COPD_data_clean, file = \"copd_data.csv\")"
  },
  {
    "objectID": "projects-folder/COPD_gene_project.html#descriptive-statistics-and-exploratory-analysis",
    "href": "projects-folder/COPD_gene_project.html#descriptive-statistics-and-exploratory-analysis",
    "title": "COPD Gene Study - Final Class Project",
    "section": "Descriptive Statistics and Exploratory Analysis",
    "text": "Descriptive Statistics and Exploratory Analysis\nFunction for descriptive statistics\n\n\nCode\n#function that returns descriptive statistics for variable in data frame\nstats &lt;- function(var) {\n  #returns mean and standard deviation for numeric and integer columns\n  if(class(var) == \"numeric\" | class(var) == \"integer\"){\n    mean_var &lt;- round(mean(var), 3)\n    sd_var &lt;- round(sd(var), 3)\n    return(list(mean = mean_var, sd = sd_var))\n  #returns a frequency table for character or factor columns\n  } else {\n    return(table(var))\n  }\n}\n\n# test function on categorical variable\nstats(COPD_data_clean$asthma)\n\n\nvar\n  No  Yes \n2165  455 \n\n\nCode\n# test function on numeric variable\nstats(COPD_data_clean$bmi)\n\n\n$mean\n[1] 28.854\n\n$sd\n[1] 5.835\n\n\nApply the function to all columns\n\n\nCode\n# apply function across columns except id column\nlapply(X = COPD_data_clean[, names(COPD_data_clean) != \"sid\"], \n       FUN = stats)\n\n\n$visit_year\nvar\n2008 2009 2010 2011 \n 570 1186  793   71 \n\n$visit_date\nvar\n2008-01-15 2008-02-15 2008-03-15 2008-04-15 2008-05-15 2008-06-15 2008-07-15 \n         1          1         10         38         45         48         77 \n2008-08-15 2008-09-15 2008-10-15 2008-11-15 2008-12-15 2009-01-15 2009-02-15 \n        76         78         85         50         61         90        103 \n2009-03-15 2009-04-15 2009-05-15 2009-06-15 2009-07-15 2009-08-15 2009-09-15 \n       109        102         90        114         92         93        109 \n2009-10-15 2009-11-15 2009-12-15 2010-01-15 2010-02-15 2010-03-15 2010-04-15 \n       110         95         79         94         77         96         78 \n2010-05-15 2010-06-15 2010-07-15 2010-08-15 2010-09-15 2010-10-15 2010-11-15 \n        78         72         52         62         48         40         58 \n2010-12-15 2011-01-15 2011-02-15 2011-03-15 2011-04-15 \n        38         21         19         20         11 \n\n$visit_age\n$visit_age$mean\n[1] 59.514\n\n$visit_age$sd\n[1] 8.704\n\n\n$gender\nvar\n  Male Female \n  1333   1287 \n\n$race\nvar\nWhite Black \n 1887   733 \n\n$smoking_status\nvar\n  Never Smoked  Former Smoker Current Smoker \n             0           1411           1209 \n\n$blood_pressure_systolic\n$blood_pressure_systolic$mean\n[1] 128.898\n\n$blood_pressure_systolic$sd\n[1] 16.712\n\n\n$blood_pressure_diastolic\n$blood_pressure_diastolic$mean\n[1] 76.632\n\n$blood_pressure_diastolic$sd\n[1] 10.594\n\n\n$heart_rate\n$heart_rate$mean\n[1] 74.023\n\n$heart_rate$sd\n[1] 12.202\n\n\n$hours_on_oxygen\nvar\n   0    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15 \n2444    8    4    2    5    6   10   14   28    6    8    1    5    1    1    3 \n  16   18   20   22   23   24 \n   4    4    2    3    1   60 \n\n$bmi\n$bmi$mean\n[1] 28.854\n\n$bmi$sd\n[1] 5.835\n\n\n$smoke_start_age\n$smoke_start_age$mean\n[1] 17.071\n\n$smoke_start_age$sd\n[1] 4.552\n\n\n$cigs_per_day_avg\n$cigs_per_day_avg$mean\n[1] 24.25\n\n$cigs_per_day_avg$sd\n[1] 11.001\n\n\n$duration_smoking\n$duration_smoking$mean\n[1] 34.924\n\n$duration_smoking$sd\n[1] 10.403\n\n\n$lung_volume_inspiratory\n$lung_volume_inspiratory$mean\n[1] NA\n\n$lung_volume_inspiratory$sd\n[1] NA\n\n\n$emphysema_percentage\n$emphysema_percentage$mean\n[1] NA\n\n$emphysema_percentage$sd\n[1] NA\n\n\n$lung_volume_expiratory\n$lung_volume_expiratory$mean\n[1] NA\n\n$lung_volume_expiratory$sd\n[1] NA\n\n\n$gas_trapping_percentage\n$gas_trapping_percentage$mean\n[1] NA\n\n$gas_trapping_percentage$sd\n[1] NA\n\n\n$mean_density_inspiratory\n$mean_density_inspiratory$mean\n[1] NA\n\n$mean_density_inspiratory$sd\n[1] NA\n\n\n$mean_density_expiratory\n$mean_density_expiratory$mean\n[1] NA\n\n$mean_density_expiratory$sd\n[1] NA\n\n\n$fev1_fvc_ratio\n$fev1_fvc_ratio$mean\n[1] NA\n\n$fev1_fvc_ratio$sd\n[1] NA\n\n\n$fev1\n$fev1$mean\n[1] NA\n\n$fev1$sd\n[1] NA\n\n\n$fvc\n$fvc$mean\n[1] NA\n\n$fvc$sd\n[1] NA\n\n\n$fev1_phase2\n$fev1_phase2$mean\n[1] NA\n\n$fev1_phase2$sd\n[1] NA\n\n\n$height_in\n$height_in$mean\n[1] 66.976\n\n$height_in$sd\n[1] 3.77\n\n\n$weight_lbs\n$weight_lbs$mean\n[1] 184.137\n\n$weight_lbs$sd\n[1] 41.595\n\n\n$hay_fever\nvar\n  No  Yes \n1842  778 \n\n$asthma\nvar\n  No  Yes \n2165  455 \n\n$bronchitis_attacks\nvar\n  No  Yes \n1544 1076 \n\n$chronic_bronchitis\nvar\n  No  Yes \n2251  369 \n\n$pneumonia\nvar\n  No  Yes \n1704  916 \n\n$emphysema\nvar\n  No  Yes \n2128  492 \n\n$copd\nvar\n  No  Yes \n1941  679 \n\n$sleep_apnea\nvar\n  No  Yes \n2191  429 \n\n\nI noticed that the following variables all report NA, so missing values need to be excluded for these variables:\n\nlung_volume_inspiartory\nemphysema_percentage\nlung_volume_expiratory\ngas_trapping_percentage\nmean_density_inspiratory\nmean_density_expiratory\nfev1_fvc_ratio\nfev1\nfvc\nfev1_phase2\n\nRemove missing values and rerun descriptive statistics\n\n\nCode\n#remove rows with missing values, complete.cases returns true for each row that contains values in all columns\nCOPD_data_clean &lt;- COPD_data_clean[ complete.cases(COPD_data_clean) , ]\n\n#check stats now return values instead of NA\nlapply(COPD_data_clean[ , names(COPD_data_clean) %in% c(\"lung_volume_inspiratory\", \"emphysema_percentage\",\n  \"lung_volume_expiratory\", \"gas_trapping_percentage\", \"mean_density_inspiratory\", \"mean_density_expiratory\",\n  \"fev1_fvc_ratio\", \"fev1\", \"fvc\", \"fev1_phase2\" ) ], stats)\n\n\n$lung_volume_inspiratory\n$lung_volume_inspiratory$mean\n[1] 5.585\n\n$lung_volume_inspiratory$sd\n[1] 1.389\n\n\n$emphysema_percentage\n$emphysema_percentage$mean\n[1] 5.645\n\n$emphysema_percentage$sd\n[1] 8.701\n\n\n$lung_volume_expiratory\n$lung_volume_expiratory$mean\n[1] 3.133\n\n$lung_volume_expiratory$sd\n[1] 0.979\n\n\n$gas_trapping_percentage\n$gas_trapping_percentage$mean\n[1] 19.027\n\n$gas_trapping_percentage$sd\n[1] 17.417\n\n\n$mean_density_inspiratory\n$mean_density_inspiratory$mean\n[1] -832.792\n\n$mean_density_inspiratory$sd\n[1] 34.103\n\n\n$mean_density_expiratory\n$mean_density_expiratory$mean\n[1] -704.658\n\n$mean_density_expiratory$sd\n[1] 69.892\n\n\n$fev1_fvc_ratio\n$fev1_fvc_ratio$mean\n[1] 0.692\n\n$fev1_fvc_ratio$sd\n[1] 0.143\n\n\n$fev1\n$fev1$mean\n[1] 2.389\n\n$fev1$sd\n[1] 0.853\n\n\n$fvc\n$fvc$mean\n[1] 3.424\n\n$fvc$sd\n[1] 0.959\n\n\n$fev1_phase2\n$fev1_phase2$mean\n[1] 2.179\n\n$fev1_phase2$sd\n[1] 0.837\n\n\n\nVisualizing numeric variables with histograms\n\n\nCode\nfor (col in names(COPD_data_clean)) {\n if(is.numeric(COPD_data_clean[,col]) | is.integer(COPD_data_clean[,col])){\n   plot &lt;-  ggplot(data = COPD_data_clean, aes(x = .data[[col]])) +\n      geom_histogram(color = \"white\", fill = \"steelblue\", bins = 30 ) +\n        labs(title = paste(\"Frequency of\", col)) + \n        theme_light()\n\n    print(plot)\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe following variables are highly skewed:\n\nfev1_fvc_ratio (left-skewed)\ngas_trapping_percentage (right-skewed)\nlung_volume_expiratory (right-skewed)\nemphysema_percentage (right-skewed)\ncigs_per_day_avg (right-skewed)\nhours_on_oxygen (right-skewed)\nsmoke_start_age (right-skewed)\n\nI decided the best transformation for each variable by plotting histograms of the transformed variables to see which transformation created the most normal shaped (least skewed) distribution.\nTransform Variables and Recreate Histograms\n\n\nCode\n#transform skewed variables\nCOPD_data_clean$fev1_fvc_ratio_squared &lt;- (COPD_data_clean$fev1_fvc_ratio)^2\nCOPD_data_clean$gas_trapping_percentage_sqrt &lt;-  sqrt(COPD_data_clean$gas_trapping_percentage)\nCOPD_data_clean$lung_volume_expiratory_log &lt;- log(COPD_data_clean$lung_volume_expiratory)\nCOPD_data_clean$emphysema_percentage_log &lt;- log(COPD_data_clean$emphysema_percentage)\nCOPD_data_clean$cigs_per_day_avg_log &lt;- log(COPD_data_clean$cigs_per_day_avg)\nCOPD_data_clean$smoke_start_age_log &lt;- log(COPD_data_clean$smoke_start_age)\n\ntransformed_vars &lt;- COPD_data_clean[, names(COPD_data_clean) %in%\n                                      c(\"fev1_fvc_ratio_squared\",\n                                        \"gas_trapping_percentage_sqrt\",\n                                        \"lung_volume_expiratory_log\",\n                                        \"emphysema_percentage_log\",\n                                        \"cigs_per_day_avg_log\",\n                                        \"smoke_start_age_log\")]\n\nfor (col in names(transformed_vars)) {\n if(is.numeric(COPD_data_clean[,col]) | is.integer(COPD_data_clean[,col])){\n   plot &lt;-  ggplot(data = COPD_data_clean, aes(x = .data[[col]])) +\n      geom_histogram(color = \"white\", fill = \"darkgreen\", bins = 30) +\n        labs(title = paste(\"Frequency of\", col)) + \n        theme_light()\n\n    print(plot)\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nVisualize Categorical Variables by Phase 2 FEV1 Scores\n\n\nCode\n# Visualizing Phase 2 FEV1 scores by categorical variables\n\nggplot(data = COPD_data_clean, aes(x = gender, y = fev1_phase2)) +\n  geom_boxplot(color = \"steelblue\") +\n  labs(title = \"Phase 2 FEV1 vs. Gender\", x = \"Gender\", y = \"Phase 2 FEV1\") + \n  theme_light()\n\n\n\n\n\n\n\n\n\nCode\nggplot(data = COPD_data_clean, aes(x = smoking_status, y = fev1_phase2)) +\n  geom_boxplot(color = \"steelblue\") +\n  labs(title = \"Phase 2 FEV1 vs. Smoking Status\", x = \"Smoking Status\", y = \"Phase 2 FEV1\") + \n  theme_light()\n\n\n\n\n\n\n\n\n\nCode\nggplot(data = COPD_data_clean, aes(x = hay_fever, y = fev1_phase2)) +\n  geom_boxplot(color = \"steelblue\") +\n  labs(title = \"Phase 2 FEV1 vs. Hay Fever\", x = \"Hay Fever\", y = \"Phase 2 FEV1\") + \n  theme_light()\n\n\n\n\n\n\n\n\n\nCode\nggplot(data = COPD_data_clean, aes(x = asthma, y = fev1_phase2)) +\n  geom_boxplot(color = \"steelblue\") +\n  labs(title = \"Phase 2 FEV1 vs. Asthma\", x = \"Asthma\", y = \"Phase 2 FEV1\") + \n  theme_light()\n\n\n\n\n\n\n\n\n\nCode\nggplot(data = COPD_data_clean, aes(x = copd, y = fev1_phase2)) +\n  geom_boxplot(color = \"steelblue\") +\n  labs(title = \"Phase 2 FEV1 Score vs. COPD\", x = \"COPD\", y = \"Phase 2 FEV1 Score\") + \n  theme_light()\n\n\n\n\n\n\n\n\n\nPhase 2 FEV1 vs.Â Gender There does appear to be a difference in phase 2 FEV1 score in females versus males. For females, the median phase2_fev1 is just under 2, with maximum scores up to about 3.5. For males, the median phase2_fev1 score is higher, just above 2.5, with maximum scores up to about 5. Male phase2_fev1 scores have higher variability than that for females. Neither group has outliers, and both groups have symmetrical distributions.\nPhase 2 FEV1 vs.Â Smoking Status There does not appear to be a difference in phase 2 FEV1 scores between former smokers and current smokers. Both groups have median phase2_fev1 of about 2.2, with some high outliers around 4.5 and 5. The current smoker group has slightly smaller range and variability. There is no data for nonsmokers in the dataset, so there is no way to know if there is a difference in FEV1 scores for nonsmokers.\nPhase 2 FEV1 vs.Â Hay Fever There does not appear to be any difference in phase 2 FEV1 scores for patients with or without hay fever. Patients with hay fever (âYesâ group) and patients without hay fever(âNoâ group) have a median phase 2 FEV1 score of about 2.2. Both groups have very similar variability, with range of about 4.6. Both groups have a few high outliers above 4.5. and otherwise symmetrical distributions.\nPhase 2 FEV1 vs.Â Asthma There appears to be a difference in phase 2 FEV1 scores between patients with and without asthma. The group of patients without asthma (âNoâ group) has a higher median phase 2 FEV1 score around 2.2, a symmetrical distribution with roughly 7 high outliers above 4.5. The group of patients with asthma (âYesâ group) has a lower median phase 2 FEV1 score of about 1.75, a smaller range, and more symmetrical distribution than the âNoâ group, with only 1 outlier at about 4.8.\nPhase 2 FEV1 vs.Â COPD There appears to be a difference in phase 2 FEV1 scores between patients with and without COPD. The group of patients without COPD, (âNoâ group) has a median phase 2 FEV1 score of about 2.4, a range of 4.5, and roughly symmetrical distribution other than the high outliers around scores 0f 4.5 to 5. The group of patients with COPD (âYesâ group) has a lower median phase 2 FEV1 score of about 1.4, a smaller range of about 4, and a slightly more right-skewed distribution.\n\n\nVisualize Numeric Variables by Phase 2 FEV1 Scores\n\n\nCode\n# Plot fev1_phase2 vs. lung volume inspiratory\nggplot(data = COPD_data_clean, aes(x = lung_volume_inspiratory , y = fev1_phase2)) +\n  geom_point(color = \"steelblue\") +\n  labs(title = \"Phase 2 FEV1 Scores vs. Lung Volume Inspiratory\", x =\"Lung Volume Inspiratory (Liters)\", y = \"Phase 2 FEV1\") + \n  theme_light()\n\n\n\n\n\n\n\n\n\nCode\n# Plot fev1_phase2 vs. lung volume expiratory\nggplot(data = COPD_data_clean, aes(x = lung_volume_expiratory_log, y = fev1_phase2))+\n  geom_point(color = \"steelblue\") +\n  labs(title = \"Phase 2 FEV1 Scores vs. Lung Volume Expiratory (log transformed)\", x = \"Log of Lung Volume Expiratory (Liters)\", y = \"Phase 2 FEV1\") + \n  theme_light()\n\n\n\n\n\n\n\n\n\nCode\n# Plot fev1_phase2 vs. duration smoking\nggplot(data = COPD_data_clean, aes(x = duration_smoking, y = fev1_phase2)) +\n  geom_point(color = \"steelblue\") +\n  labs(title = \"Phase 2 FEV1 Scores vs. Duration Smoking\", x = \"Duration Smoking (Years)\", y = \"Phase 2 FEV1\") + \n  theme_light()\n\n\n\n\n\n\n\n\n\nCode\n# Plot fev1_phase2 vs. average number of cigarettes per day\nggplot(data = COPD_data_clean, aes(x = cigs_per_day_avg_log, y = fev1_phase2)) +\n  geom_point(color = \"steelblue\") +\n  labs(title = \"Phase 2 FEV1 Scores vs. Avg Cigs per Day (log transformed)\", x = \"Log Avg Cigs per Day\", y = \"Phase 2 FEV1\") + \n  theme_light()\n\n\n\n\n\n\n\n\n\nCode\n  # Plot fev1_phase2 vs. Forced Vital Capacity (FVC)\nggplot(data = COPD_data_clean, aes(x = fvc , y = fev1_phase2)) +\n  geom_point(color = \"steelblue\") +\n  labs(title = \"Phase 2 FEV1 Scores vs. FVC\", x = \"FVC\", y= \"Phase 2 FEV1\") + \n  theme_light()\n\n\n\n\n\n\n\n\n\nPhase 2 FEV1 vs.Â Lung Volume Inspiratory There appears to be a moderate positive linear relationship between lung volume inspiratory and phase 2 FEV1 scores. The most concentrated section of data points is around lung volume inspiratory between 4 and 6 liters and phase 2 FEV1 scores between 1.5 and 3.\nPhase 2 FEV1 vs.Â Log of Lung Volume Expiratory There does not appear to be much of a relationship between lung volume expiratory and Phase 2 FEV1 scores, possibly a weak negative linear relationship, or a weak nonlinear relationship. The data is clustered around log transformed lung volume expiratory of 1, and phase 2 FEV1 score between 2 and 3.\n\nPhase 2 FEV1 vs.Â Duration Smoking\nThere appears to be a weak negative linear relationship between duration smoking in years and Phase 2 FEV1 scores. The data is centered around 30-50 years of smoking and phase 2 FEV1 scores between 1.5 and 3.\n\nPhase 2 FEV1 vs.Â Log of Avg Cigs per Day\nThere does not appear to be any relationship between the average number of cigarettes smoked per day and phase 2 FEV1 scores. There is slightly less variability in phase 2 FEV1 scores for log average cigs per day below 2 and above 4.\n\nPhase 2 FEV1 vs.Â FVC\nThere appears to be a strong positive linear relationship between FVC and Phase 2 FEV1 scores. The data is most concentrated between FVC of 2 and 4 and phase 2 FEV1 scores between 1.5 and 3."
  },
  {
    "objectID": "projects-folder/COPD_gene_project.html#inference-and-modeling",
    "href": "projects-folder/COPD_gene_project.html#inference-and-modeling",
    "title": "COPD Gene Study - Final Class Project",
    "section": "Inference and Modeling",
    "text": "Inference and Modeling\n\nCategorical Variables\nConduct a statistical test to determine if there is a significant difference in fev1_phase2 between groups from categorical variables previously visualized.\n\n\nCode\n# To determine if there is significant difference in fev1_phase2 scores between groups, I will use bootstrapping to create confidence intervals\n\n#B = number of bootstrapped samples, n = sample size\nB &lt;- 1000\nn &lt;- length(COPD_data_clean$fev1_phase2)\n\n#vectors to store mean differences\ngender_diffs  &lt;- vector(length = B)\nsmoking_diffs &lt;- vector(length = B)\nhayfev_diffs  &lt;- vector(length = B)\nasthma_diffs  &lt;- vector(length = B)\ncopd_diffs    &lt;- vector(length = B)\n\n# create B = 1000 samples\nfor(i in 1:B) {\n  # create random sample of dataset with replacement\n  boot_indexes &lt;- sample(1:n, size = n, replace = TRUE)\n  boot_sample &lt;- COPD_data_clean[boot_indexes, ]\n\n  #subset sample by groups and phase2_fev1 scores\n  females       &lt;- boot_sample[boot_sample$gender == \"Female\", \"fev1_phase2\"]\n  males         &lt;- boot_sample[boot_sample$gender == \"Male\", \"fev1_phase2\"]\n\n  curr_smokers  &lt;- boot_sample[boot_sample$smoking_status == \"Current Smoker\", \"fev1_phase2\"]\n  form_smokers  &lt;- boot_sample[boot_sample$smoking_status == \"Former Smoker\", \"fev1_phase2\"]\n\n  hay_fever_yes &lt;- boot_sample[boot_sample$hay_fever == \"Yes\", \"fev1_phase2\"]\n  hay_fever_no  &lt;- boot_sample[boot_sample$hay_fever == \"No\", \"fev1_phase2\"]\n\n  asthma_yes    &lt;- boot_sample[boot_sample$asthma == \"Yes\", \"fev1_phase2\"]\n  asthma_no     &lt;- boot_sample[boot_sample$asthma == \"No\", \"fev1_phase2\"]\n\n  copd_yes      &lt;- boot_sample[boot_sample$copd == \"Yes\", \"fev1_phase2\"]\n  copd_no       &lt;- boot_sample[boot_sample$copd == \"No\", \"fev1_phase2\"]\n\n  #calculate and store mean differences for each group\n  gender_diff &lt;- mean(females) - mean(males)\n    gender_diffs[i] &lt;- gender_diff\n\n  smoking_status_diff &lt;- mean(curr_smokers) - mean(form_smokers)\n    smoking_diffs[i] &lt;- smoking_status_diff\n\n  hay_fever_diff &lt;- mean(hay_fever_no) - mean(hay_fever_yes)\n    hayfev_diffs[i] &lt;-  hay_fever_diff\n\n  asthma_diff &lt;- mean(asthma_no) - mean(asthma_yes)\n    asthma_diffs[i] &lt;-  asthma_diff\n\n  copd_diff &lt;- mean(copd_no) - mean(copd_yes)\n    copd_diffs[i] &lt;- copd_diff\n}\n\nprint(\"95% Confidence Interval for Mean Difference in phase 2 FEV1 by Gender:\")\n\n\n[1] \"95% Confidence Interval for Mean Difference in phase 2 FEV1 by Gender:\"\n\n\nCode\nprint(quantile(gender_diffs, c(0.025, 0.975)))\n\n\n      2.5%      97.5% \n-0.6822040 -0.5627485 \n\n\nCode\nprint(\"95% Confidence Interval for Mean Difference in phase 2 FEV1 by Smoking Status:\")\n\n\n[1] \"95% Confidence Interval for Mean Difference in phase 2 FEV1 by Smoking Status:\"\n\n\nCode\nprint(quantile(smoking_diffs, c(0.025, 0.975)))\n\n\n      2.5%      97.5% \n0.09214804 0.21701205 \n\n\nCode\nprint(\"95% Confidence Interval for Mean Difference in phase 2 FEV1 by Hay Fever:\")\n\n\n[1] \"95% Confidence Interval for Mean Difference in phase 2 FEV1 by Hay Fever:\"\n\n\nCode\nprint(quantile(hayfev_diffs, c(0.025, 0.975)))\n\n\n       2.5%       97.5% \n-0.04237734  0.09667474 \n\n\nCode\nprint(\"95% Confidence Interval for Mean Difference in phase 2 FEV1 by Asthma:\")\n\n\n[1] \"95% Confidence Interval for Mean Difference in phase 2 FEV1 by Asthma:\"\n\n\nCode\nprint(quantile(asthma_diffs, c(0.025, 0.975)))\n\n\n     2.5%     97.5% \n0.4267547 0.5809193 \n\n\nCode\nprint(\"95% Confidence Interval for Mean Difference in phase 2 FEV1 by COPD:\")\n\n\n[1] \"95% Confidence Interval for Mean Difference in phase 2 FEV1 by COPD:\"\n\n\nCode\nprint(quantile(copd_diffs, c(0.025, 0.975)))\n\n\n    2.5%    97.5% \n0.917726 1.042295 \n\n\nBased on the bootstrapped confidence intervals I created, I can conclude that:\n\nfemales have significantly lower phase 2 FEV1 scores than males\ncurrent smokers have significantly greater phase 2 fev1 scores than former smokers\nthere is no significant difference in phase 2 FEV1 scores for patients with hay fever and patients who do not have hay fever (0 is contained within the interval)\npatients without asthma have significantly greater phase 2 fev1 scores than patients with asthma\npatients without COPD have signifcantly greater phase 2 fev1 scores than patients with asthma\n\n\n\nNumeric Variables\n\nFit 5 simple linear regressions using the five numeric variables previously visualized\nConduct a statistical test to determine if the five slopes from regressions are significantly different from 0\n\n\n\nCode\n# 1. fit linear regressions\nfit_lung_insp &lt;- lm(fev1_phase2 ~ lung_volume_inspiratory, data = COPD_data_clean)\nfit_lung_exp_log &lt;- lm(fev1_phase2 ~ lung_volume_expiratory_log, data = COPD_data_clean)\nfit_smoking &lt;- lm(fev1_phase2 ~ duration_smoking, data = COPD_data_clean)\nfit_cigs &lt;- lm(fev1_phase2 ~ cigs_per_day_avg_log, data = COPD_data_clean)\nfit_FVC &lt;- lm(fev1_phase2 ~ fvc, data = COPD_data_clean)\n\n# print original fitted linear models\nprint(paste(\"phase2_fev1 =\", round(coef(fit_lung_insp)[1], 3), \"+\", round(coef(fit_lung_insp)[2], 3), \"(lung_volume_inspiratory)\"))\n\n\n[1] \"phase2_fev1 = 1.254 + 0.165 (lung_volume_inspiratory)\"\n\n\nCode\nprint(paste(\"phase2_fev1 =\", round(coef(fit_lung_exp_log)[1], 3), \"+\", round(coef(fit_lung_exp_log)[2], 3), \"(lung_volume_expiratory_log)\"))\n\n\n[1] \"phase2_fev1 = 2.554 + -0.343 (lung_volume_expiratory_log)\"\n\n\nCode\nprint(paste(\"phase2_fev1 =\", round(coef(fit_smoking)[1], 3), \"+\", round(coef(fit_smoking)[2], 3), \"(duration_smoking)\"))\n\n\n[1] \"phase2_fev1 = 2.98 + -0.023 (duration_smoking)\"\n\n\nCode\nprint(paste(\"phase2_fev1 =\", round(coef(fit_cigs)[1], 3), \"+\", round(coef(fit_cigs)[2], 3), \"(cigs_per_day_avg_log)\"))\n\n\n[1] \"phase2_fev1 = 2.4 + -0.072 (cigs_per_day_avg_log)\"\n\n\nCode\nprint(paste(\"phase2_fev1 =\", round(coef(fit_FVC)[1], 3), \"+\", round(coef(fit_FVC)[2], 3), \"(fvc)\"))\n\n\n[1] \"phase2_fev1 = -0.073 + 0.658 (fvc)\"\n\n\nCode\nprint(\"----\")\n\n\n[1] \"----\"\n\n\nCode\n# 2.\n# To determine if the slopes from the linear models above are different from zero, I will use bootstrapping to create confidence intervals\nB &lt;- 2000 # number of bootstrapped samples\nn &lt;- length(COPD_data_clean$fev1_phase2) #sample szie\n\n#vectors to store slopes\nlung_in_slopes  &lt;- vector(length = B)\nlung_exp_slopes &lt;- vector(length = B)\nsmoking_slopes  &lt;- vector(length = B)\ncigs_slopes     &lt;- vector(length = B)\nfvc_slopes      &lt;- vector(length = B)\n\n#loop\nfor(i in 1:B){\n  #create random sample with replacement\n  boot_indexes &lt;- sample(1:nrow(COPD_data_clean), size = n, replace = TRUE)\n  boot_sample &lt;- COPD_data_clean[boot_indexes, ]\n\n  #fit linear models\n  boot_fit_lung_insp &lt;- lm(fev1_phase2 ~ lung_volume_inspiratory, data = boot_sample)\n  boot_fit_lung_exp_log &lt;- lm(fev1_phase2 ~ lung_volume_expiratory_log, data = boot_sample)\n  boot_fit_smoking &lt;- lm(fev1_phase2 ~ duration_smoking, data = boot_sample)\n  boot_fit_cigs &lt;- lm(fev1_phase2 ~ cigs_per_day_avg_log, data = boot_sample)\n  boot_fit_FVC &lt;- lm(fev1_phase2 ~ fvc, data = boot_sample)\n\n  #store slopes\n    lung_in_slopes[i] &lt;- coef(boot_fit_lung_insp)[2]\n    lung_exp_slopes[i] &lt;- coef(boot_fit_lung_exp_log)[2]\n    smoking_slopes[i] &lt;-  coef(boot_fit_smoking)[2]\n    cigs_slopes[i]     &lt;-  coef(boot_fit_cigs)[2]\n    fvc_slopes [i]     &lt;-  coef(boot_fit_FVC)[2]\n}\n\n\n\n\nCode\n#create and print confidence intervals for slopes\nprint(\"95% confidence interval for slope of linear regression on phase 2 FEV1 w.r.t. lung_volume_inspiratory\")\n\n\n[1] \"95% confidence interval for slope of linear regression on phase 2 FEV1 w.r.t. lung_volume_inspiratory\"\n\n\nCode\nprint(quantile(lung_in_slopes, c(0.025, 0.975)))\n\n\n     2.5%     97.5% \n0.1387804 0.1919386 \n\n\nCode\nprint(\"95% confidence interval for slope of linear regressionon phase 2 FEV1 w.r.t. lung_volume_expiratory_log\")\n\n\n[1] \"95% confidence interval for slope of linear regressionon phase 2 FEV1 w.r.t. lung_volume_expiratory_log\"\n\n\nCode\nprint(quantile(lung_exp_slopes, c(0.025, 0.975)))\n\n\n      2.5%      97.5% \n-0.4518263 -0.2304680 \n\n\nCode\nprint(\"95% confidence interval for slope of linear regression on phase 2 FEV1 w.r.t. duration_smoking\")\n\n\n[1] \"95% confidence interval for slope of linear regression on phase 2 FEV1 w.r.t. duration_smoking\"\n\n\nCode\nprint(quantile(smoking_slopes, c(0.025, 0.975)))\n\n\n       2.5%       97.5% \n-0.02574149 -0.02002271 \n\n\nCode\nprint(\"95% confidence interval for slope of linear regression on phase 2 FEV1 w.r.t. cigs_per_day_avg_log\")\n\n\n[1] \"95% confidence interval for slope of linear regression on phase 2 FEV1 w.r.t. cigs_per_day_avg_log\"\n\n\nCode\nprint(quantile(cigs_slopes, c(0.025, 0.975)))\n\n\n        2.5%        97.5% \n-0.141334443 -0.001118851 \n\n\nCode\nprint(\"95% confidence interval for slope of linear regression on phase 2 FEV1 w.r.t. fvc\")\n\n\n[1] \"95% confidence interval for slope of linear regression on phase 2 FEV1 w.r.t. fvc\"\n\n\nCode\nprint(quantile(fvc_slopes, c(0.025, 0.975)))\n\n\n     2.5%     97.5% \n0.6333565 0.6808751 \n\n\nBased on my linear regression models, and the bootstrapped 95% confidence intervals for the slopes of the regression models, I can conclude that,\n\nlung volume inspiratory and phase 2 FEV1 are significantly correlated (the slope is significantly greater than 0) because 0 is not contained in the confidence interval\nlung volume expiratory (log transformed) and phase 2 FEV1 are significantly correlated (slope is significantly less than 0) because 0 is not contained within the interval\nduration smoking and phase 2 fev1 score are significantly correlated (slope is significantly less than 0) because 0 is not contained within the interval\naverage number of cigarettes per day (log transformed) and phase 2 fev1 score are significantly correlated (slope is significantly less than 0) because 0 is not contained within the interval\nFVC and phase 2 fev1 score are significantly correlated (slope is significantly greater than 0) because 0 is not contained within the interval"
  },
  {
    "objectID": "projects-folder/COPD_gene_project.html#conclusion",
    "href": "projects-folder/COPD_gene_project.html#conclusion",
    "title": "COPD Gene Study - Final Class Project",
    "section": "Conclusion",
    "text": "Conclusion\nAffecting over 16 million Americans, chronic obstructive pulmonary disease (COPD) is commonly caused by cigarette smoking, asthma, and toxin inhalation. There is no cure for COPD; however, patients receive care to manage symptoms and slow the progression of the disease. One way to measure the severity of COPD is through spirometry. One spirometry measure is the forced expiratory volume (FEV1), which measures the volume of air forcefully exhaled in 1 second. The aim of this study was to compare patientsâ FEV1 scores at the five year follow up (denoted as âphase 2â), to other variables from the patient data.\nThe data used came from the COPDGene Research Group. It included separate datasets of demographic, spirometry and medical image data for 2620 patients. The datasets were merged together by patient id. The data was cleaned to remove missing values, and convert variables into more usable data types. The final dataset was 2600 rows and 41 variables. The variables included information about visit date, patientsâ age, gender, race, smoking status, blood pressure, heart rate, height, weight, and bmi. There were also variables about the patientâs smoking history and any respiratory illness diagnoses. Spirometry variables included lung volume inspiratory and expiratory (the volume of air in lungs at inhalation and exhalation), FEV1, FEV1 at phase 2 (follow up), forced vital capacity (FVC) and fev1_fvc ratio.\nExploratory analysis was performed next. A function was created to return summary statistics for numeric variables, and a frequency table for character variables. The lapply function was utilized to apply the custom function to each column in the dataset. The ggplot2 library was used to create histograms for all numeric and integer variables. After reviewing these histograms, some variables were transformed to be more normally distributed to be used for analysis. The fev1_fvc_ratio was left-skewed, so a square transformation was performed. Lung volume expiratory, emphysema percentage, average cigarettes per day, and smoking start age were all highly right skewed and log transformations were performed on these.\nNext, to compare phase 2 FEV1 scores between different groups of patients, ggplot2 was used to create boxplots of categorical variables. The chosen categorical variables were gender, smoking status, hay fever, asthma, and copd diagnosis. The boxplots showed differences between groups for gender, asthma and copd. Scatterplots were created with ggplot2 to look for relationships between numeric variables and phase 2 fev1 scores. Lung volume inspiratory, lung volume expiratory (log-transformed), duration smoking, average number of cigarettes per day (log-transformed) and FVC were graphed as explanatory variables with phase 2 FEV1 as the response. The scatterplots for lung volume inspiratory and FVC showed positive linear relationships, while lung volume expiratory and duration smoking showed negative linear relationships.\nFinally, bootstrapping was implemented to test the significance of the relationships seen in the data visualizations that were created. Bootstrapping is a method that involves repeatedly sampling a data sample with replacement. This process simulates the sampling distribution, which allows for statistical inference to be made through confidence intervals. Bootstrapped confidence intervals were created for the mean difference in phase 2 FEV1 scores for each of the categorical variables chosen. These confidence intervals revealed that females have significantly lower phase 2 FEV1 scores than males do, current smokers have significantly greater phase 2 FEV1 scores than former smokers, hay fever diagnosis does not relate to phase 2 fev1 scores, patients without asthma have greater phase 2 fev1 scores than patients with asthma, and patients without copd have greater phase 2 copd scores than patients without copd. The difference in phase 2 FEV1 scores between current and former smokers had a 95% confidence interval of [0.09, 0.21] which are relatively small values compared to the difference of patients with or without COPD, [0.92, 1.04], so even though the differences for smoking status are statistically significant, they may not be clinically significant. For numeric variables, bootstrapped confidence intervals were made for the slopes of a simple linear regression model between each one of the chosen numeric variables and phase 2 FEV1 scores. As expected based on the scatterplots, the confidence intervals showed lung volume inspiratory and FVC had slopes significantly greater than zero, indicating positive linear relationships, and lung volume expiratory, duration smoking, and average cigarettes per day had slopes significantly less than zero, indicating negative linear relationships with phase 2 FEV1. Overall, many variables, categorical and quantitative, have significant relationships with phase 2 fev1 scores, so more analysis is needed to determine which variables are the most significant."
  },
  {
    "objectID": "projects.html",
    "href": "projects.html",
    "title": "Projects",
    "section": "",
    "text": "On to the fun part! For now, Iâve linked past class projects. Iâll be updating this page with more personal projects, so check back for updates.\n\n\n\n\nCOPD Gene Project - Class Final\nAnalyze relationship between Phase 2 FEV1 Scores and other variables in data set Tags: R, COPD, Data Visualization, Bootstrapping"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Jaynaâs Portfolio",
    "section": "",
    "text": "Hi! Iâm Jayna, a statistics & data science major with a passion for data visualization, public health, design, and storytelling with data.\nIâm a senior at SDSU (go Aztecs!) and I absolutely love San Diego! When Iâm not on my computer, I love being outside, biking around the bay, going to workout classes, crocheting, and just yapping with my friends. Iâm also a big coffee lover, and currently work part time as a barista :)\nIâm starting this website (in August 2025) to be a collection of my projects, thoughts, and overall learning in data science. Whether you are a future employer, a supportive friend or family member, just interested in my projects, or want some insight into a gen zâs thought process, thank you for visiting!"
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "Jaynaâs Portfolio",
    "section": "",
    "text": "Hi! Iâm Jayna, a statistics & data science major with a passion for data visualization, public health, design, and storytelling with data.\nIâm a senior at SDSU (go Aztecs!) and I absolutely love San Diego! When Iâm not on my computer, I love being outside, biking around the bay, going to workout classes, crocheting, and just yapping with my friends. Iâm also a big coffee lover, and currently work part time as a barista :)\nIâm starting this website (in August 2025) to be a collection of my projects, thoughts, and overall learning in data science. Whether you are a future employer, a supportive friend or family member, just interested in my projects, or want some insight into a gen zâs thought process, thank you for visiting!"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Welcome to my blog! Check in for posts about data, design, the creative process behind my projects, random (somewhat relevant) thoughts I have, and more. I hope reading some of my posts helps you get to know me and how my brain works.\nClick on the titles on the side to jump to different posts :) â-&gt;"
  },
  {
    "objectID": "blog.html#pull-yourself-up-by-your-block-bootstraps",
    "href": "blog.html#pull-yourself-up-by-your-block-bootstraps",
    "title": "Blog",
    "section": "Pull Yourself up by Your (Block) Bootstraps",
    "text": "Pull Yourself up by Your (Block) Bootstraps\nHello again,\nToday Iâll be writing about the concept of block bootstrapping and how I used it in my research project at UC Irvine this summer (2025). As part of our final presentation at UCI, I got to teach the audience about this concept to explain my research findings and wanted to share it here.\nBootstrapping is a statistical method used to estimate the uncertainty of a desired statistic. Itâs typically used when you donât know the sampling distribution of the desired statistic or your data violates specific distribution assumptions, and therefore cannot use traditional methods of uncertainty estimation that use theoretical sampling distributions.\nQuick reminders before we get into it!\n1) The true sampling distribution of a sample statistic comes from repeating the experiment (e.g.Â taking a sample from the population) many times and recalculating the sample statistic each time. If you then plotted all the calculations of that sample statistic, you would see the sampling distribution. Itâs the probability distribution of all the possible values for the sample statistic. In reality, we usually donât know and canât find the true sampling distribution of a statistic because it would be costly and timely to repeat the experiment many times. Instead, we use theoretical sampling distributions that are common probability distributions that each come with their own assumptions about the data. We choose the theoretical sampling distribution based on characteristics like sample size, underlying population distribution, and the statistic we are interested in.\n2) We use sampling distributions to estimate the uncertainty of a sample statistic. We are using what we know about the probability of observing that specific sample statistic (we know this from the sampling distribution) to say how certain we are that this sample statistic represents the true value of the population statistic.\nIf our sample does not meet certain criteria or we donât have enough information about the underlying population to use theoretical sampling distributions, we can simulate the sampling distribution. Enter bootstrapping.\nSince we canât take new samples of data from the population to get the real sampling distribution, in bootstrapping, we treat our original sample as the âpopulationâ and randomly re-sample (with replacement) our âpopulationâ many times. At each re-sample, we calculate our statistic of interest, and store it. After repeating this process, we can use percentiles to calculate confidence intervals, showing the uncertainty of our original point estimate.\nBlock-bootstrapping is a version of bootstrapping that is designed for dependent or highly correlated data. This is what I used in my project! The main difference from regular bootstrapping is that instead of re-sampling every individual data point, the data is grouped into clusters or blocks, and then blocks are chosen at random for each re-sample. There are many different methods for how to choose blocks or clusters of data, depending on the specifics of your data. This method is commonly used in time-series or spatial data, where there are groups of highly correlated or dependent data.\nI used this method of block-bootstrapping in my research project at ISI-BUDS. Hereâs a quick intro to my project and our dataset. The goal of our project was to understand the recruitment networks of internally displaced sex workers in Ukraine. The data was collected by the Alliance for Public Health, an NGO in Ukraine, using recruitment driven sampling. Individuals in the population of interest are chosen by the NGO, they are called the âseedâ, they take the survey, and are given a set number of âcouponsâ to give to people they know who are also eligible for the survey. Those people come in and take the survey and they get coupons, and so on. The resulting data is structured as trees, each tree starting with the seed. We could assume independence of the trees, because seeds are selected to cover a diverse population, and to reach networks that wonât overlap. However, the data on individuals within the same tree is dependent data because an individual being in the study is dependent on them being recruited by a friend. This is an example of one of our data trees. Blue dots show local individuals, and red dots show internally displaced individuals.\n\nThe analysis we did on this individual-level data was to run binomial regressions to understand how the displacement status of the recruiter impacted the displacement status of the respondent. We needed to estimate the uncertainty of our regression coefficients, but could not use standard regression theory (theoretical sampling distributions) because that assumes data is independent, and our data is dependent. Since we had independence of trees, and each tree was essentially a block of dependent data, we used block bootstrapping to estimate our uncertainty.\nHow I used Block Bootstrapping for this project:\nFirst, we ran the regression on our original sample, aka our entire dataset of different trees, and recorded the regression coefficient, \\(\\beta_1\\) as our point estimate.\n\nNext, we re-sampled our original sample of trees. We randomly select four numbers between 1 and 4 and take the data from the corresponding trees as our new sample, then run the regression on the new sample.\n\nWe repeat this process again,\n\nEach time, we will have different trees included to run our regression model with. We repeated this process 500 times. It is common to take between 500 and 2000 bootstrap samples. Then we can use quantiles (AKA percentiles) to construct confidence intervals for our regression model coefficients. For a 95% confidence interval this would be the 2.5 percentile and the 97.5 percentile.\nAs seen in the visuals above, each tree varied in size and number of displaced people. This was important to our interpretation of our confidence intervals for a few reasons. First, since the trees varied in size, even through there were the same number of trees in each bootstrap sample, there was a different total number of nodes. Second, since there was large variation between trees in number of displaced people per tree, some bootstrap samples might have a lot of displaced, and some might have very very few. Our main variable of interest was the displacement status on an individualâs recruiter, so having a large variation in number of displaced people per sample greatly affected the coefficients of the regression model.\nAll in all, block-bootstrapping is a useful method for estimating uncertainty of dependent data.\nThanks for reading, and happy bootstrapping!\nBest, a certainly fun uncertainty estimator"
  },
  {
    "objectID": "blog.html#why-i-love-data-visualization",
    "href": "blog.html#why-i-love-data-visualization",
    "title": "Blog",
    "section": "Why I Love Data Visualization",
    "text": "Why I Love Data Visualization\nLately, Iâve been trying to navigate through the differences in data science, data analytics, data engineering, and all the other options for careers generally dealing with data. Throughout all of the different roles and responsibilities, my favorite data skill has to be data visualization.\nIâve always been really interested in art, color theory, visual aesthetics, fashion, and general design. In high school I seriously explored being a graphic design major, and as a little kid I wanted to animate movies. Another two things I have always loved are puzzles and math. In college, Iâve really enjoyed my higher math and statistics classes and learning to code because itâs a bit of both puzzles and math. Adding it all together, we get to data visualizations. Itâs a perfect combination of all the things I find fascinating. Time flies by when Iâm working on any data visualizations.\nAnother thing to know about me is that I love to help, which really is the nail in the coffin for my love of data visualizations. The whole point of creating good data visualizations is that they help people understand complex information.\nI want my career to be contributing to the world in a way I think is important.\nIf you read my thoughts on gen Z and AI, youâll know I think my generation needs some help maintaining our critical thinking skills (aka not letting AI make all of our decisions for us). What follows is my thought process on how creating more data visualizations on current, informative topics would be of benefit to young people.\nNaturally, I began to think about how I could apply my skills to help my generation and the future ones continue to make informed decisions for themselves. Thinking through my given information (thanks math), weâve got,\n\na population of young people overstimulated by information overload and decision fatigue\ncontained within a digital space, a time of screens, video games, bright, flashing colors, and 15 second videos\nscreen dependency that has led to health issues galore, including, but definitely not limited to, severe attention span issues\n\nWith this information, I thought back through my question. How can I help people get engaged in interacting with information to make their own decisions? Well, with the target audience in mind, it seems obvious: make the information visual. While a histogram is never going to keep up with a TikTok video, if itâs visually aesthetic, easy to read, and clearly communicates relevant information, at least people can look at it and learn something, which is a win in my book. If it can highlight some frequently overlooked information, or lead oneâs eye to an important pattern even better. If it makes even one person stop and think a little deeper about the topic, and why such a pattern might emerge, thatâs hitting the jackpot.\nNow, keep in mind data visualizations can easily be skewed (math pun unintended, but it made me laugh, so it stays) to make comparisons seem more drastic than they really are just by omitting zero in the y-axis. If it becomes overly visual and dynamic, it can distract from the content, or even worse just be confusing and hard to read. Use the wrong color combination and anyone who is color blind wonât be able to understand the visual. If someone doesnât write alternate text, visually impaired people wonât get the information. Needless to say, there are many ways data visualizations can go wrong, and not serve their original purpose, which is to communicate important information in an easily digestible way.\nI want to create relevant and engaging data visualizations, so that all people can continue to make their own well-informed decisions, and focus on living in the real world instead of a virtual one.\nCheers, a data viz enthusiast"
  },
  {
    "objectID": "blog.html#gen-z-and-ai",
    "href": "blog.html#gen-z-and-ai",
    "title": "Blog",
    "section": "Gen Z and AI",
    "text": "Gen Z and AI\nMy generation has grown up in a world where almost any information we could ever want to know is only a few clicks away. Take any given day, usually mid conversation, Iâll realize I donât know something, and if the person Iâm talking to doesnât know either, I usually say, âIâm gonna look it upâ.\nI want to know the correct answer, not just the speculation of someone (my friend) whoâs far from an expert. The amazing thing is I can find out the real answer, with just a few taps on a screen. Well I can find out one answer,\nand another answer from three news articles about the topic,\nanother answer from a nonprofitâs website,\nand another similar answer from an academic paper,\nwhat six to seven influencers think about the subject,\nand a reddit feed, or two, of questionable (at best) advice on the topic,\nand I can see some related images,\nabout four videos teaching me about the topic,\nand of course six different companies trying to sell me whatever it is Iâve looked up.\nThere is so much data on the internet, and so many answers. Growing up, I remember being taught that if I could find three sources that say the same thing, that itâs probably the right answer. I was 10, and doing a research project on giraffes. With all the information and data out there, three sources might not be enough anymore. Not to mention what I want to know is a lot more complex than how tall a baby giraffe is.\nNot to worry though, now we have AI to aggregate and summarize all that information on the internet. Itâll give you a concise answer and even show its sources. Great! Well, is it really? I mean yes it is, it saves time and it does make finding an answer easier. But, is easier always better?\nIâm worried about my generation and the ones after mine. Iâm worried that we will rely too heavily on AI, not to answer our questions, but to make our decisions for us. Iâve already seen my friends use it for everything from help in school to answering their Hinge messages. If weâre not careful, AI is going to turn into our toxic relationship.\nWe need to set some intentional boundaries with AI. The widespread availability of AI is amazing, but it also creates a big challenge for us. That challenge is having the awareness and discipline to use it to teach us so that we understand, instead of just trusting the first, easy, answer it gives. We need to remember that AI is a tool, and should be used as such. AI is so powerful and can help us do so many cool things, as long as we use it in the right way.\nI could go rambling on about why we need to spend more time in the real world and less in the virtual one, but for now, Iâll leave it here.\nLove, a laughably anti-tech tech girl"
  }
]